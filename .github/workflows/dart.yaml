name: dart

on:
  push:
    branches: parent
    paths:
      - '**.dart'
      - '.github/workflows/*.yaml'
      - analysis_options.yaml
      - pubspec.yaml
  pull_request:
    branches: parent
    paths:
      - '**.dart'
      - '.github/workflows/*.yaml'
      - analysis_options.yaml
      - pubspec.yaml

jobs:
  format: 
    name: format
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: '*.dart'
          sparse-checkout-cone-mode: false

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1

      - name: Check whether codes are formatted
        run: dart format --output=none --set-exit-if-changed --follow-links .

  analyze: 
    name: analyze
    runs-on: ubuntu-latest
    needs: format
    strategy:
      fail-fast: false
      matrix:
        version:
          - stable
          - 3.0.0
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |-
            *.dart
            analysis_options.yaml
            pubspec.yaml
          sparse-checkout-cone-mode: false

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.version }}

      - name: Install dependencies
        run: dart pub get

      - name: Remove unsupported lint rules
        if: matrix.version == '3.0.0'
        run: |-
          yq --inplace 'del(.linter.rules[] | select(
              . == "annotate_redeclares" or
              . == "no_self_assignments" or
              . == "no_wildcard_variable_uses")
            )' analysis_options.yaml

      - name: Analyze code
        run: dart analyze --fatal-infos
